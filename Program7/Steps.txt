Here’s a *complete guide* to control *motion effects and audio speed using Unity’s Timeline and Time.timeScale, with a **script to adjust audio speed dynamically*.

---

## *Step 1: Set Up the Scene*
1. *Create a 3D project* in Unity.  
2. Add a *Canvas* (GameObject → UI → Canvas) and set its *Render Mode* to *Screen Space - Overlay*.  
3. Add a *Raw Image* inside the *Canvas* (Right-click Canvas → UI → Raw Image).  
4. Add an *Audio Source* to the scene:  
   - *Right-click in Hierarchy* → Create Empty → Rename it *"AudioManager"*.  
   - *Add an Audio Source* component.  
   - Drag and drop an *audio file* into the *Audio Source*.

---

## *Step 2: Set Up the Timeline*
1. Open *Window → Sequencing → Timeline*.  
2. Right-click in the Hierarchy and create an *Empty GameObject, name it **"TimelineController"*.  
3. Select *"TimelineController", then click **Create* in the Timeline window to create a new Timeline asset.  
   - Save it as *"MotionTimeline"* in the *Assets folder*.  
4. Click *"Add"* in the Timeline window and add:  
   - *Animation Track* (for the Raw Image movement).  
   - *Audio Track* (for the audio file).  

---

## *Step 3: Animate the Raw Image*
1. Select the *Raw Image, then in the **Timeline window, click **Add Keyframe* (●) on the Animation Track.  
2. Move the timeline cursor forward (e.g., at 5 seconds) and change the *position* and *scale* of the image in the *Inspector*.  
3. Unity will automatically generate *smooth interpolation* between keyframes.  

---

## *Step 4: Add and Sync Audio*
1. Drag and drop your *audio file* into the *Audio Track* in Timeline.  
2. Adjust the *clip duration* to match the animation.  

---

## *Step 5: Control Time Scale in Timeline*
1. Open *Window → Animation → Curves* in the Timeline.  
2. Right-click on the Timeline and choose *Add Override Track → Time Scale Track*.  
3. Add keyframes to *change Time.timeScale dynamically*:  
   - *At 0s, set Time Scale to **1.0* (normal speed).  
   - *At 2s, set Time Scale to **0.5* (slow motion).  
   - *At 4s, set Time Scale back to **1.0* (normal speed).  
4. Unity will automatically *adjust animation speed, but **audio pitch needs to be adjusted manually using a script*.

---

## *Step 6: Add a Script to Adjust Audio Pitch*
### *1. Create the Script*
1. Create a *new C# script, name it **"AudioTimeScaleController.cs"*.
2. Attach it to the *AudioManager* GameObject.

### *2. Add the Following Code:*
csharp
using UnityEngine;

public class AudioTimeScaleController : MonoBehaviour
{
    public AudioSource audioSource;

    void Update()
    {
        // Adjust audio pitch based on Time.timeScale
        if (audioSource != null)
        {
            audioSource.pitch = Time.timeScale;  
        }
    }
}

### *3. Assign the Audio Source*
- In Unity, select *AudioManager* in the Hierarchy.
- Drag and drop the *Audio Source* component into the *audioSource* field in *AudioTimeScaleController*.

---

## *Step 7: Play and Test*
1. Click *Play* in Unity.  
2. Observe how the *motion of the image slows down and speeds up* dynamically.  
3. The *audio pitch also changes* automatically to match the *Time.timeScale*.

---

### *Final Output*
✅ *Image moves and scales smoothly* using *Timeline keyframes*.  
✅ *Time.timeScale changes dynamically* using *Timeline Override Track*.  
✅ *Audio pitch adjusts* in real-time using *AudioTimeScaleController.cs*.  

This ensures the *audio syncs perfectly with the animation speed*. Let me know if you need any modifications!
